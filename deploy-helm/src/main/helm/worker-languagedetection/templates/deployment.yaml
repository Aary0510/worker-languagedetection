#
# Copyright 2015-2019 Micro Focus or one of its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: {{ .Values.workerLanguageDetection.labels.name }}
    app.kubernetes.io/version: {{ .Values.workerLanguageDetection.labels.version | quote }}
    app.kubernetes.io/component: {{ .Values.workerLanguageDetection.labels.component }}
    app.kubernetes.io/part-of: {{ .Values.general.labelAppName }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
  name: {{ .Values.workerLanguageDetection.labels.name }}
spec:
  replicas: {{ .Values.workerLanguageDetection.deployment.replicas }}
  strategy:
    type: {{ .Values.workerLanguageDetection.deployment.strategyType }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.workerLanguageDetection.labels.name }}
        app.kubernetes.io/version: {{ .Values.workerLanguageDetection.labels.version | quote }}
        app.kubernetes.io/component: {{ .Values.workerLanguageDetection.labels.component }}
        app.kubernetes.io/part-of: {{ .Values.general.labelAppName }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
    spec:
      containers:
      - name: worker-languagedetection
        image: {{ .Values.general.dockerRegistry }}/{{ .Values.workerLanguageDetection.deployment.image }}
        ports:
        - containerPort: {{ .Values.workerLanguageDetection.deployment.adminPort }}
        env:
        - name: CAF_LANGUAGE_DETECTION_WORKER_RESULT_FORMAT
          value: {{ .Values.workerLanguageDetection.deployment.env.resultFormat }}
        - name: CAF_WORKER_DATASTORE_PATH
          value: {{ .Values.general.workflowLocation }}
        - name: CAF_WORKER_INPUT_QUEUE
          value: {{ .Values.workerLanguageDetection.deployment.env.inputQueue }}
        - name: CAF_WORKER_OUTPUT_QUEUE
          value: {{ .Values.workerLanguageDetection.deployment.env.outputQueue }}
        - name: _JAVA_OPTIONS
          value: {{ .Values.workerLanguageDetection.deployment.env.javaOptions }}
        livenessProbe:
          httpGet:
            path: {{ .Values.workerLanguageDetection.deployment.healthcheckPath }}
            port: {{ .Values.workerLanguageDetection.deployment.adminPort }}
          initialDelaySeconds: {{ .Values.general.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.general.timeoutSeconds }}
          periodSeconds: {{ .Values.general.periodSeconds }}
          failureThreshold: {{ .Values.general.failureThreshold }}
        imagePullPolicy: {{ .Values.general.pullPolicy }}
        volumeMounts:
        - name: {{ .Values.general.workflowVolumeName }}
          mountPath: {{ .Values.general.workflowLocation }}
      imagePullSecrets:
      - name: {{ .Values.general.pullSecret }}
      volumes:
      - name: {{ .Values.general.workflowVolumeName }}
        configMap:
          name: {{ .Values.general.workflowVolumeConfigMap }}
